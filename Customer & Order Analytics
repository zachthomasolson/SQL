#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1. How many orders were placed in January?
SELECT count(orderID) 
  FROM BIT_DB.JanSales
 WHERE length(orderID) = 6 AND 
       orderID <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT count(orderID) 
  FROM BIT_DB.JanSales
 WHERE Product = "iPhone" AND 
       length(orderID) = 6 AND 
       orderID <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
  FROM BIT_DB.customers cust
       INNER JOIN
       BIT_DB.FebSales FEB ON cust.order_id = FEB.orderID
 WHERE length(orderID) = 6 AND 
       orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT Product,
                price
  FROM BIT_DB.JanSales
 WHERE price IN (
           SELECT min(price) 
             FROM BIT_DB.JanSales
       );

#5. What is the total revenue for each product sold in January?
SELECT sum(Quantity) * price AS revenue,
       Product
  FROM BIT_DB.JanSales
  WHERE length(orderID) = 6 AND 
       orderID <> 'Order ID'
 GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT sum(Quantity),
       Product,
       sum(Quantity) * price AS revenue
  FROM BIT_DB.FebSales
 WHERE location = '548 Lincoln St, Seattle, WA 98101'
 GROUP BY Product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT count(DISTINCT cust.acctnum),
       avg(Quantity * price) 
  FROM BIT_DB.FebSales FEB
       LEFT JOIN
       BIT_DB.customers cust ON FEB.orderID = cust.order_id
 WHERE Feb.Quantity > 2 AND 
       length(orderID) = 6 AND 
       orderID <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT DISTINCT Product,
                sum(Quantity) 
  FROM BIT_DB.FebSales
 WHERE location LIKE '%Los Angeles%'
 GROUP BY Product;

#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT DISTINCT location,
                count(orderID) 
  FROM BIT_DB.JanSales
 WHERE location LIKE '%NY%' AND 
       length(orderID) = 6 AND 
       orderID <> 'Order ID'
 GROUP BY location
HAVING count(orderID) > 2;

#10. How many of each type of headphone were sold in February?
SELECT Product,
       sum(Quantity) 
  FROM BIT_DB.FebSales
 WHERE product LIKE '%headphones%' AND 
       length(orderID) = 6 AND 
       orderID <> 'Order ID'
 GROUP BY Product;

#11. What was the average amount spent per account in February?
SELECT avg(Quantity * price) 
  FROM BIT_DB.FebSales Feb
       LEFT JOIN
       BIT_DB.customers cust ON FEB.orderID = cust.order_id
 WHERE length(orderID) = 6 AND 
       orderID <> 'Order ID';

#12. What was the average quantity of products purchased per account in February?
SELECT sum(Quantity) / count(cust.acctnum) 
  FROM BIT_DB.FebSales Feb
       LEFT JOIN
       BIT_DB.customers cust ON FEB.orderID = cust.order_id
 WHERE length(orderID) = 6 AND 
       orderID <> 'Order ID';

#13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product,
       sum(Quantity * price) 
  FROM BIT_DB.JanSales
 GROUP BY Product
 ORDER BY sum(Quantity * price) DESC
 LIMIT 1;
